-- -------------------------------------------------------------
-- 
-- File Name: Streaming_VHDL\fil_videosharp_sim\Adjust_Sync_Signals.vhd
-- Created: 2019-06-18 09:45:08
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Adjust_Sync_Signals
-- Source Path: fil_videosharp_sim/Streaming 2-D FIR Filter/Line Memory/Line Memory Controller/Adjust Sync Signals
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Adjust_Sync_Signals IS
  PORT( dataValidOut                      :   IN    std_logic;
        frameWidth                        :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        frameHeight                       :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        colIndex                          :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        rowIndex                          :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        syncOut                           :   OUT   std_logic_vector(0 TO 4)  -- boolean [5]
        );
END Adjust_Sync_Signals;


ARCHITECTURE rtl OF Adjust_Sync_Signals IS

  -- Component Declarations
  COMPONENT Detect_Line_Start
    PORT( dataValidOut                    :   IN    std_logic;
          colIndex                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          alignedLineStart                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Detect_Line_End
    PORT( dataValidOut                    :   IN    std_logic;
          frameWidth                      :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          colIndex                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          lineEnd                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Detect_Frame_Start
    PORT( lineStart                       :   IN    std_logic;
          rowIndex                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          alignedFrameStart               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Detect_Frame_End
    PORT( lineEnd                         :   IN    std_logic;
          frameHeight                     :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          rowIndex                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          valid                           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT SyncMux
    PORT( activePixel                     :   IN    std_logic;
          lineStart                       :   IN    std_logic;
          lineEnd                         :   IN    std_logic;
          FrameStart                      :   IN    std_logic;
          FrameEnd                        :   IN    std_logic;
          syncOut                         :   OUT   std_logic_vector(0 TO 4)  -- boolean [5]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Detect_Line_Start
    USE ENTITY work.Detect_Line_Start(rtl);

  FOR ALL : Detect_Line_End
    USE ENTITY work.Detect_Line_End(rtl);

  FOR ALL : Detect_Frame_Start
    USE ENTITY work.Detect_Frame_Start(rtl);

  FOR ALL : Detect_Frame_End
    USE ENTITY work.Detect_Frame_End(rtl);

  FOR ALL : SyncMux
    USE ENTITY work.SyncMux(rtl);

  -- Signals
  SIGNAL Detect_Line_Start_out1           : std_logic;
  SIGNAL Detect_Line_End_out1             : std_logic;
  SIGNAL Detect_Frame_Start_out1          : std_logic;
  SIGNAL Detect_Frame_End_out1            : std_logic;
  SIGNAL SyncMux_out1                     : std_logic_vector(0 TO 4);  -- boolean [5]

BEGIN
  u_Detect_Line_Start : Detect_Line_Start
    PORT MAP( dataValidOut => dataValidOut,
              colIndex => colIndex,  -- uint8
              alignedLineStart => Detect_Line_Start_out1
              );

  u_Detect_Line_End : Detect_Line_End
    PORT MAP( dataValidOut => dataValidOut,
              frameWidth => frameWidth,  -- uint16
              colIndex => colIndex,  -- uint8
              lineEnd => Detect_Line_End_out1
              );

  u_Detect_Frame_Start : Detect_Frame_Start
    PORT MAP( lineStart => Detect_Line_Start_out1,
              rowIndex => rowIndex,  -- uint8
              alignedFrameStart => Detect_Frame_Start_out1
              );

  u_Detect_Frame_End : Detect_Frame_End
    PORT MAP( lineEnd => Detect_Line_End_out1,
              frameHeight => frameHeight,  -- uint16
              rowIndex => rowIndex,  -- uint8
              valid => Detect_Frame_End_out1
              );

  u_SyncMux : SyncMux
    PORT MAP( activePixel => dataValidOut,
              lineStart => Detect_Line_Start_out1,
              lineEnd => Detect_Line_End_out1,
              FrameStart => Detect_Frame_Start_out1,
              FrameEnd => Detect_Frame_End_out1,
              syncOut => SyncMux_out1  -- boolean [5]
              );

  syncOut <= SyncMux_out1;

END rtl;

