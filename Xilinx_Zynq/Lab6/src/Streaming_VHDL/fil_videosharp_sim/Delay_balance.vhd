-- -------------------------------------------------------------
-- 
-- File Name: Streaming_VHDL\fil_videosharp_sim\Delay_balance.vhd
-- Created: 2019-06-18 09:45:08
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Delay_balance
-- Source Path: fil_videosharp_sim/Streaming 2-D FIR Filter/Delay balance
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Delay_balance IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1                               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Out1                              :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END Delay_balance;


ARCHITECTURE rtl OF Delay_balance IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          rd_dout                         :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic
    USE ENTITY work.SimpleDualPortRAM_generic(rtl);

  -- Signals
  SIGNAL Counter_Limited_out1             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Constant1_out1                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Add_out1                         : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Simple_Dual_Port_RAM_out1        : std_logic_vector(7 DOWNTO 0);  -- ufix8

BEGIN
  u_Simple_Dual_Port_RAM : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 16,
                 DataWidth => 8
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => In1,
              wr_addr => std_logic_vector(Counter_Limited_out1),
              wr_en => Constant_out1,
              rd_addr => std_logic_vector(Add_out1),
              rd_dout => Simple_Dual_Port_RAM_out1
              );

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 65535
  Counter_Limited_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Counter_Limited_out1 <= to_unsigned(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Counter_Limited_out1 <= Counter_Limited_out1 + to_unsigned(16#0001#, 16);
      END IF;
    END IF;
  END PROCESS Counter_Limited_process;


  Constant_out1 <= '1';

  Constant1_out1 <= to_unsigned(16#5EC9#, 16);

  Add_out1 <= Counter_Limited_out1 + Constant1_out1;

  Out1 <= Simple_Dual_Port_RAM_out1;

END rtl;

