-- -------------------------------------------------------------
-- 
-- File Name: Streaming_VHDL\fil_videosharp_sim\Aligned_Demux.vhd
-- Created: 2019-06-18 09:45:08
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Aligned_Demux
-- Source Path: fil_videosharp_sim/Streaming 2-D FIR Filter/Line Memory/Aligned Demux
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Aligned_Demux IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        synch                             :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
        dataValid                         :   OUT   std_logic;
        alignedLineStart                  :   OUT   std_logic;
        alignedFrameStart                 :   OUT   std_logic;
        frameEnd                          :   OUT   std_logic
        );
END Aligned_Demux;


ARCHITECTURE rtl OF Aligned_Demux IS

  -- Component Declarations
  COMPONENT Sync_Demux
    PORT( syncSignals                     :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
          activePixel                     :   OUT   std_logic;
          lineStart                       :   OUT   std_logic;
          frameStart                      :   OUT   std_logic;
          frameEnd                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Aligned_Pulse
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          valid                           :   IN    std_logic;
          earlyPulse                      :   IN    std_logic;
          alignedPulse                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Aligned_Pulse1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          valid                           :   IN    std_logic;
          earlyPulse                      :   IN    std_logic;
          alignedPulse                    :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Sync_Demux
    USE ENTITY work.Sync_Demux(rtl);

  FOR ALL : Aligned_Pulse
    USE ENTITY work.Aligned_Pulse(rtl);

  FOR ALL : Aligned_Pulse1
    USE ENTITY work.Aligned_Pulse1(rtl);

  -- Signals
  SIGNAL Sync_Demux_out1                  : std_logic;
  SIGNAL Sync_Demux_out2                  : std_logic;
  SIGNAL Sync_Demux_out4                  : std_logic;
  SIGNAL Sync_Demux_out5                  : std_logic;
  SIGNAL alignedPulse                     : std_logic;
  SIGNAL alignedPulse_1                   : std_logic;

BEGIN
  u_Sync_Demux : Sync_Demux
    PORT MAP( syncSignals => synch,  -- ufix5
              activePixel => Sync_Demux_out1,
              lineStart => Sync_Demux_out2,
              frameStart => Sync_Demux_out4,
              frameEnd => Sync_Demux_out5
              );

  u_Aligned_Pulse : Aligned_Pulse
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              valid => Sync_Demux_out1,
              earlyPulse => Sync_Demux_out2,
              alignedPulse => alignedPulse
              );

  u_Aligned_Pulse1 : Aligned_Pulse1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              valid => Sync_Demux_out1,
              earlyPulse => Sync_Demux_out4,
              alignedPulse => alignedPulse_1
              );

  dataValid <= Sync_Demux_out1;

  alignedLineStart <= alignedPulse;

  alignedFrameStart <= alignedPulse_1;

  frameEnd <= Sync_Demux_out5;

END rtl;

